#define ZMK_POINTING_DEFAULT_SCRL_VAL 150

#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define MARK 2
#define CURSOR 3
#define FUNCTION 4
#define SCROLL 5
#define WIRELESS 6

//mouse cursol

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

//mouse scroll

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

&msc_input_listener {
    speed_up {
        layers = <FUNCTION>;
        input-processors = <&zip_wheel_scaler 3 1>; //スクロールを3倍速にする
    };
};

&trackball_listener {
    scroller {
        layers = <SCROLL>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            //スクロール方向を逆転,,,,,
            <&zip_xy_to_scroll_mapper>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <18 17>;
            layers = <0>;
        };

        leftclick {
            bindings = <&mkp MB1>;
            key-positions = <16 17>;
            layers = <0>;
        };

        Middlclick {
            bindings = <&mkp MB3>;
            key-positions = <7 17>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <26 27>;
            layers = <5>;
        };

        dot {
            bindings = <&kp PERIOD>;
            key-positions = <27 28>;
            layers = <5>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <16 17>;
            layers = <5>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <17 18>;
            layers = <5>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <7 6>;
            layers = <5>;
        };

        Asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <7 8>;
            layers = <5>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <15 16>;
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <13 14>;
            layers = <0>;
        };

        leftclick2 {
            bindings = <&mkp MB1>;
            key-positions = <12 13>;
            layers = <0>;
        };

        Rightclick2 {
            bindings = <&mkp MB2>;
            key-positions = <11 12>;
            layers = <0>;
        };

        middleclick2 {
            bindings = <&mkp MB3>;
            key-positions = <2 12>;
            layers = <0>;
        };
    };

    behaviors {
        re_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R           &kp T                                &kp Y        &kp U  &kp I            &kp O                 &kp P
&kp A      &kp S         &kp D         &kp F           &kp G                                &kp H        &kp J  &kp K            &kp L                 &kp BACKSPACE
&kp Z      &kp X         &kp C         &kp V           &kp B                                &kp N        &kp M  &mt RCTRL COMMA  &mt RIGHT_ALT PERIOD  &kp MINUS
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &kp LANGUAGE_2  &lt 5 SPACE  &kp TAB    &lt 4 RSHFT  &lt 3 ENTER         &mo 6            &kp BACKSLASH         &mt RIGHT_SHIFT SLASH
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //1

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans  &trans  &trans
            >;
        };

        //2

        MARK {
            bindings = <
&kp EXCLAMATION             &kp AT           &kp HASH         &kp DOLLAR     &kp PERCENT                      &kp CARET     &kp AMPERSAND  &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp LBKT
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp SEMICOLON  &kp SEMICOLON                    &kp C_MUTE    &kp LS(LBKT)   &kp RIGHT_BRACKET      &kp BACKSLASH         &kp EQUAL
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp APOS       &kp SQT                          &kp KP_EQUAL  &kp INT3       &kp LS(RIGHT_BRACKET)  &kp LS(BACKSLASH)     &kp LS(INT1)
&trans                      &trans           &trans           &trans         &trans         &trans    &trans  &trans                       &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp LS(QUESTION)
            >;

            sensor-bindings = <&re_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        //3

        CURSOR {
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LC(W)  &kp LC(R)  &kp LC(T)                    &kp LC(LS(TAB))  &kp LC(TAB)     &mkp MCLK       &mkp MB4         &mkp MB5
&kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)                    &kp PAGE_UP      &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp DEL
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)                    &kp PAGE_DOWN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans     &trans     &trans     &trans     &trans     &trans    &trans  &trans                           &trans          &trans           &trans
            >;
        };

        //4

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                     &kp K_VOLUME_UP    &kp F7  &kp F8  &kp F9  &trans
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10                    &kp K_VOLUME_DOWN  &kp F4  &kp F5  &kp F6  &trans
&trans  &trans  &trans  &kp F11  &kp F12                    &kp C_MUTE         &kp F1  &kp F2  &kp F3  &trans
&trans  &trans  &trans  &trans   &trans   &trans    &trans  &trans                     &trans  &trans  &trans
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //5

        SCROLL {
            bindings = <
&kp SEMICOLON  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                     &kp BACKSLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp DQT
&kp COLON      &kp DOLLAR       &kp PERCENT   &kp CARET             &kp DOUBLE_QUOTES                         &kp LBKT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSPACE
&trans         &kp EXCLAMATION  &kp AT_SIGN   &kp POUND             &kp QUESTION                              &kp UNDER      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp TILDE
&trans         &trans           &trans        &trans                &trans                 &trans    &kp DEL  &kp NUMBER_0                 &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        //6

        WIRELESS {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans        &trans        &trans        &trans        &trans                               &trans          &trans        &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans                               &trans          &trans        &trans        &trans        &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans    &bootloader  &studio_unlock                &trans        &trans        &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };
    };
};
